import { Vector3 } from "three";
import { RailArrType, RailSegment } from "../types/rail";

export const CART_MOVEMENT: RailArrType[] = [
    { position: new Vector3(0, 0, 0), rotation: new Vector3(0, 0, 0), isStop: true },
    { position: new Vector3(16, 0, 0), rotation: new Vector3(0, -(Math.PI / 2), 0), isCorner: true },
    { position: new Vector3(16, -2, 14), rotation: new Vector3(0, Math.PI / 2, 0), isIncline: true },
    { position: new Vector3(16, -20, 33), rotation: new Vector3(0, Math.PI / 2, 0) },
    { position: new Vector3(16, -20, 38), rotation: new Vector3(0, Math.PI / 2, 0), isStop: true },

    { position: new Vector3(16, -20, 42), rotation: new Vector3(0, Math.PI / 2, 0), isCorner: true },
    { position: new Vector3(25, -22, 42), rotation: new Vector3(0, Math.PI, 0), isIncline: true },
    { position: new Vector3(46, -40, 42), rotation: new Vector3(0, 0, 0) },
    { position: new Vector3(60, -40, 42), rotation: new Vector3(0, Math.PI, 0), isCorner: true },
    { position: new Vector3(60, -40, 30), rotation: new Vector3(0, Math.PI / 2, 0), isStop: true },
];

export const CART_REVERSE_MOVEMENT: RailArrType[] = [
    { position: new Vector3(0, 0, 0), rotation: new Vector3(0, 0, 0), isStop: true },
    { position: new Vector3(16, 0, 0), rotation: new Vector3(0, -(Math.PI / 2), 0), isCorner: true },
    { position: new Vector3(16, 0, 13), rotation: new Vector3(0, Math.PI / 2, 0) },
    { position: new Vector3(16, -20, 34), rotation: new Vector3(0, Math.PI / 2, 0), isIncline: true },
    { position: new Vector3(16, -20, 38), rotation: new Vector3(0, Math.PI / 2, 0), isStop: true },

    { position: new Vector3(16, -20, 42), rotation: new Vector3(0, Math.PI / 2, 0), isCorner: true },
    { position: new Vector3(26, -20, 42), rotation: new Vector3(0, 0, 0) },
    { position: new Vector3(45, -40, 42), rotation: new Vector3(0, Math.PI, 0), isIncline: true },
    { position: new Vector3(60, -40, 42), rotation: new Vector3(0, Math.PI, 0), isCorner: true },
    { position: new Vector3(60, -40, 30), rotation: new Vector3(0, Math.PI / 2, 0), isStop: true },
];

export const RAIL_SEGMENTS: RailSegment[] = [
    { position: [0, 0, 0], rotation: [0, 0, 0], isStop: true },
    { position: [2, 0, 0], rotation: [0, 0, 0] },
    { position: [4, 0, 0], rotation: [0, 0, 0] },
    { position: [6, 0, 0], rotation: [0, 0, 0] },
    { position: [8, 0, 0], rotation: [0, 0, 0] },
    { position: [10, 0, 0], rotation: [0, 0, 0] },
    { position: [12, 0, 0], rotation: [0, 0, 0] },
    { position: [14, 0, 0], rotation: [0, 0, 0] },
    { position: [16, 0, 0], rotation: [0, -(Math.PI / 2), 0], isCorner: true },
    { position: [16, 0, 2], rotation: [0, Math.PI / 2, 0] },
    { position: [16, 0, 4], rotation: [0, Math.PI / 2, 0] },
    { position: [16, 0, 6], rotation: [0, Math.PI / 2, 0] },
    { position: [16, 0, 8], rotation: [0, Math.PI / 2, 0] },
    { position: [16, 0, 10], rotation: [0, Math.PI / 2, 0] },
    { position: [16, 0, 12], rotation: [0, Math.PI / 2, 0] },
    { position: [16, -2, 14], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -4, 16], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -6, 18], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -8, 20], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -10, 22], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -12, 24], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -14, 26], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -16, 28], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -18, 30], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -20, 32], rotation: [0, Math.PI / 2, 0], isIncline: true },
    { position: [16, -20, 34], rotation: [0, Math.PI / 2, 0] },
    { position: [16, -20, 36], rotation: [0, Math.PI / 2, 0] },
    { position: [16, -20, 38], rotation: [0, Math.PI / 2, 0], isStop: true },
    { position: [16, -20, 40], rotation: [0, Math.PI / 2, 0] },
    { position: [16, -20, 42], rotation: [0, Math.PI / 2, 0], isCorner: true },
    { position: [18, -20, 42], rotation: [0, 0, 0] },
    { position: [20, -20, 42], rotation: [0, 0, 0] },
    { position: [22, -20, 42], rotation: [0, 0, 0] },
    { position: [24, -20, 42], rotation: [0, 0, 0] },
    { position: [26, -22, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [28, -24, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [30, -26, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [32, -28, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [34, -30, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [36, -32, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [38, -34, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [40, -36, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [42, -38, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [44, -40, 42], rotation: [0, Math.PI, 0], isIncline: true },
    { position: [46, -40, 42], rotation: [0, 0, 0] },
    { position: [48, -40, 42], rotation: [0, 0, 0] },
    { position: [50, -40, 42], rotation: [0, 0, 0] },
    { position: [52, -40, 42], rotation: [0, 0, 0] },
    { position: [54, -40, 42], rotation: [0, 0, 0] },
    { position: [56, -40, 42], rotation: [0, 0, 0] },
    { position: [58, -40, 42], rotation: [0, 0, 0] },
    { position: [60, -40, 42], rotation: [0, Math.PI, 0], isCorner: true },
    { position: [60, -40, 40], rotation: [0, Math.PI / 2, 0] },
    { position: [60, -40, 38], rotation: [0, Math.PI / 2, 0] },
    { position: [60, -40, 36], rotation: [0, Math.PI / 2, 0] },
    { position: [60, -40, 34], rotation: [0, Math.PI / 2, 0] },
    { position: [60, -40, 32], rotation: [0, Math.PI / 2, 0] },
    { position: [60, -40, 30], rotation: [0, Math.PI / 2, 0], isStop: true },
];

export const SPEED = 12;
